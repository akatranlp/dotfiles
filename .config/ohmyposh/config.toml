console_title_template = '{{ .Shell }} in {{ .Folder }}'
version = 3
final_space = true

[secondary_prompt]
  template = '❯❯ '
  foreground = 'magenta'
  background = 'transparent'

[transient_prompt]
  template = '❯ '
  background = 'transparent'
  foreground_templates = ['{{if gt .Code 0}}red{{end}}', '{{if eq .Code 0}}magenta{{end}}']

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  [[blocks.segments]]
    template = "{{ if .SSHSession }}<b> {{ .UserName }}@{{ .HostName }} </b>{{ end }}"
    foreground = 'yellow'
    background = 'transparent'
    type = 'session'
    style = 'plain'

  [[blocks.segments]]
    template = '<b>{{ .Path }}</b>{{ if not .Writable }}🔒{{ end }}'
    foreground = 'blue'
    background = 'transparent'
    type = 'path'
    style = 'plain'

    [blocks.segments.properties]
      cache_duration = 'none'
      style = 'agnoster_short'
      max_depth = 1
      folder_icon = '..'

      [blocks.segments.properties.mapped_locations]
        '~/projects' = '📦 '
        '~/progeek/projects' = '🤓'

  [[blocks.segments]]
    template = ' <b>{{ .UpstreamIcon }}{{ .HEAD }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }}<red>{{ if .Working.Changed }}  {{ .Working.String }}{{ end }}{{ if and (.Working.Changed) (.Staging.Changed) }} |{{ end }}{{ if .Staging.Changed }}  {{ .Staging.String }}{{ end }}{{ if gt .StashCount 0 }}  {{ .StashCount }}{{ end }}</></b>'
    foreground = 'magenta'
    background = 'transparent'
#     foreground_templates = [
#       '{{ if or (.Working.Changed) (.Staging.Changed) }}#c4a000{{ end }}',
#       '{{ if and (gt .Ahead 0) (gt .Behind 0) }}#f26d50{{ end }}',
#       '{{ if gt .Ahead 0 }}#89d1dc{{ end }}',
#       '{{ if gt .Behind 0 }}#4e9a06{{ end }}'
#     ]
    syle = 'plain'
    type = 'git'

    [blocks.segments.properties]
      branch_icon = ''
      branch_identical_icon = ''
      fetch_stash_count = true
      fetch_status = true
      fetch_upstream_icon = true

      [blocks.segments.properties.mapped_branches]
        'feature/*' = '🚀'
        'release/*' = '📦'
        'hotfix/*' = '🔥'

  [[blocks.segments]]
    template = ' <white>via</> <b> {{ .Context }}</b>'
    foreground = 'blue'
    background = 'transparent'
    type = 'docker'
    style = 'plain'

  [[blocks.segments]]
    template = ' <white>via</> <b> v{{ .Full }}</b>'
    foreground = 'cyan'
    background = 'transparent'
    type = 'go'
    style = 'plain'

    [blocks.segments.properties]
      display_mode = 'context'
      extensions = [ '*.go', 'go.mod', 'go.work' ]

  [[blocks.segments]]
    template = ' <white>via</> <b> v{{ .Full }}</b>'
    foreground_templates = [
      '{{if not .Mismatch }}green{{end}}',
      '{{if .Mismatch }}red{{end}}'
    ]
    background = 'transparent'
    type = 'node'
    style = 'plain'

    [blocks.segments.properties]
      display_mode = 'context'
      extensions = [ '*.ts', '*.mts', '*.cts', '*.js', '*.mjs', '*.cjs', 'package.json', '.nvmrc', '.node-version' ]
      folders = [ 'node_modules' ]

  [[blocks.segments]]
    template = ' <white>via</> <b>  v{{ .Full }}{{ if .Venv }}({{ .Venv }}){{ end }}</b>'
    foreground = 'yellow'
    background = 'transparent'
    type = 'python'
    style = 'plain'

    [blocks.segments.properties]
      display_mode = 'context'
      extensions = [ '*.py', '*.ipynb', 'pyproject.toml', 'requirements.txt', 'setup.py', '.python-version' ]
      folders = [ 'venv', '.venv' ]

  [[blocks.segments]]
    template = " <white>via</> <b> v{{ .Full }}</b>"
    # template = " <white>via</> <b>🦀 v{{ .Full }}</b>"
    foreground = 'red'
    background = 'transparent'
    type = 'rust'
    style = 'plain'

    [blocks.segments.properties]
      display_mode = 'context'
      extensions = [ '*.rs', 'Cargo.toml' ]

  [[blocks.segments]]
    template = ' <white>via</> <b> v{{ .Full }}</b>'
    foreground = 'yellow'
    background = 'transparent'
    type = 'zig'
    style = 'plain'

    [blocks.segments.properties]
      display_mode = 'context'
      extensions = [ '*.zig', '*.zon' ]

  [[blocks.segments]]
    template = ' <white>with</> <b>  {{if eq .Output "0"}}loaded{{else if eq .Output "1"}}not loaded{{else}}denied{{ end }}</b>'
    foreground_templates = [
      '{{if eq .Output "0"}}green{{end}}',
      '{{if eq .Output "1"}}cyan{{end}}',
      '{{if eq .Output "2"}}red{{end}}'
    ]
    background = 'transparent'
    type = 'command'
    style = 'plain'

    [blocks.segments.properties]
      shell = 'bash'
      script = '~/.config/ohmyposh/direnv.sh'

  [[blocks.segments]]
    #template = ''
    foreground = 'white'
    background = 'transparent'
    type = 'root'
    style = 'plain'


[[blocks]]
  type = 'rprompt'
  overflow = 'hidden'

  [[blocks.segments]]
    template = '<white>took</> <b>{{ .FormattedMs }}</b>'
    foreground = 'yellow'
    background = 'transparent'
    type = 'executiontime'
    style = 'plain'

    [blocks.segments.properties]
      style = 'round'
      cache_duration = 'none'
      threshold = 2_000

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  # [[blocks.segments]]
  #   template = '{{ if .WSL }}WSL at {{ end }}{{.Icon}} '
  #   foreground = 'white'
  #   background = 'transparent'
  #   type = 'os'
  #   style = 'plain'
  #
  #   [blocks.segments.properties]
  #     manjaro = ''

  [[blocks.segments]]
    template = '❯'
    background = 'transparent'
    type = 'text'
    style = 'plain'
    foreground_templates = ['{{if gt .Code 0}}red{{end}}', '{{if eq .Code 0}}magenta{{end}}']

    [blocks.segments.properties]
      cache_duration = 'none'

[[tooltips]]
  tips = [ 'k', 'kubectl', 'kubectx', 'kustomize', 'helm' ]
  template = '<b>ﴱ {{ .Context }}{{ if and .Namespace (ne .Namespace "default") }}::{{ .Namespace }}{{ end }}</b> '
  foreground = 'cyan'
  background = 'transparent'
  type = 'kubectl'
  style = 'plain'

  [tooltips.properties.context_aliases]
    'minikube' = 'local'

